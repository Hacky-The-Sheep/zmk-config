/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;

    // 7 backlight + 2 glowlight
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  W  |  L  |  Y  |  P  |  B  |   |  Z  |  F   |  O  |  U  |  '  | BKSP |
            // | CTRL |  C  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  A  |  ;   |
            // | SHFT |  Q  |  J  |  V  |  D  |  K  |   |  X  |  H   |  ,  |  .  |  /  | ESC  |
            //                    | LWR | DEL | GUI |   | ENT | SPC  | ALT |

            bindings = <
&kp ESCAPE    &lt 6 W  &kp L  &kp Y    &kp P          &kp B             &kp Z      &kp F      &kp O      &kp U    &kp SQT   &kp PIPE
&kp LCTRL     &lt 4 C  &kp R  &lt 2 S  &kp T          &kp G             &lt 5 M    &kp N      &kp E      &kp I    &kp A     &kp SEMICOLON
&kp LEFT_ALT  &lt 3 Q  &kp J  &kp V    &lt 1 D        &kp K             &kp X      &kp H      &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_GUI
                              &kp TAB  &kp BACKSPACE  &kp LEFT_SHIFT    &kp ENTER  &kp SPACE  &mo 2
            >;
        };

        numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT |  4  |  5  |  6  |  *  |      |
            // | SHFT |     |     |     |     |     |   |     |  1  |  2  |  3  |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1    &trans  &kp N7  &kp N8  &kp N9  &kp N0     &kp DOLLAR
&trans  &trans  &trans  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp N4  &kp N5  &kp N6  &kp STAR   &trans
&trans  &trans  &trans  &trans        &trans        &bt BT_NXT      &trans  &kp N1  &kp N2  &kp N3  &kp MINUS  &trans
                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        symbols {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans  &kp EQUAL    &kp MINUS  &trans    &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCL       &kp AT            &trans
&trans  &trans  &trans  &kp PERCENT  &kp CARET  &trans    &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN  &trans
&trans  &trans  &trans  &trans       &kp GRAVE  &trans    &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT    &kp BACKSLASH     &trans
                        &trans       &trans     &trans    &trans  &trans                &trans
            >;
        };

        movement {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp LG(RS(NUMBER_1))  &kp LG(RS(NUMBER_2))  &kp LG(RS(NUMBER_3))  &kp LG(RS(NUMBER_4))  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT_ARROW  &kp DOWN_ARROW        &kp UP_ARROW          &kp RIGHT             &trans                &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &kp LG(NUMBER_1)      &kp LG(NUMBER_2)      &kp LG(NUMBER_3)      &kp LG(NUMBER_4)      &trans
                        &trans  &trans  &trans    &trans          &trans                &trans
            >;
        };

        color {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &bl BL_ON        &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &rgb_ug RGB_TOG  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans           &trans           &trans
            >;
        };

        Media {
            bindings = <
&trans  &trans  &trans  &kp C_PREVIOUS     &kp C_NEXT        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans             &kp C_PLAY_PAUSE  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans             &trans            &trans    &trans  &trans  &trans
            >;
        };

        Wallpaper {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(LG(N7))        &kp LC(LG(N8))        &kp LC(LG(N9))        &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(LG(NUMBER_4))  &kp LC(LG(N5))        &kp LC(LG(NUMBER_6))  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LG(LC(NUMBER_1))  &kp LC(LG(NUMBER_2))  &kp LC(LG(NUMBER_3))  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans                &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
